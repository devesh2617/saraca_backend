// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  name        String
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now())
  Role        Role?         @relation(fields: [roleId], references: [id])
  roleId      String?
  isVerified  Boolean?
  UserDetails UserDetails[]
}

model Role {
  id        String   @id @default(uuid())
  role      String   @unique
  createdAt DateTime @default(now())
  User      User[]
}

model Region {
  id        String     @id @default(uuid())
  name      String     @unique
  Position  Position[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Position {
  id                   String        @id @default(uuid())
  title                String
  description          String
  location             String
  function             String
  role                 String
  jobId                String?       @unique
  desiredSkills        String
  desiredQualification String
  desiredExperience    String
  Region               Region?       @relation(fields: [regionId], references: [id])
  regionId             String?
  isDeleted            Boolean       @default(false)
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  UserDetails          UserDetails[]
}

model WhitePaper {
  id          String   @id @default(uuid())
  title       String   @unique
  content     String
  description String
  industry    String
  img         String
  pdf         String
  date        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Blog {
  id        String   @id @default(uuid())
  title     String   @unique
  img       String
  content   String
  date      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Webinar {
  id        String   @id @default(uuid())
  title     String   @unique
  img       String
  link      String
  date      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model News {
  id          String   @id @default(uuid())
  img         String
  title       String   @unique
  description String
  date        String
  link        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CaseStudy {
  id                   String   @id @default(uuid())
  img                  String
  title                String   @unique
  industry             String
  project_scope        String
  project_deliverables String
  customer             String
  key_tools            String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

model UserDetails {
  id                                   String   @id @default(uuid())
  where_did_you_hear_about_us          String?
  previously_worked_for_saraca         String?
  country                              String?
  name                                 String?
  address                              String?
  country_code                         String?
  mobile_no                            String?
  relevant_experience                  Float?
  relevant_experience_role_description String?
  total_experience                     Float?
  total_experience_role_description     String?
  school_university                    String?
  degree                               String?
  field_of_study                       String?
  cgpa                                 Float?
  skills                               String?
  resume                               String?
  linkedin_account                     String?
  agreement_for_contact                String?
  gender                               String?
  terms_conditions                     Boolean?
  created_at                           DateTime @default(now())
  updated_at                           DateTime @updatedAt
  Position                             Position @relation(fields: [positionId], references: [id])
  positionId                           String
  User                                 User?     @relation(fields: [userId], references: [id])
  userId                               String?

  @@unique([positionId, userId])
}

model Events{
id String @id @default(uuid())
name String
from_date DateTime
to_date DateTime?
images String[]
description String
location String
created_at DateTime @default(now())
updated_at DateTime @updatedAt
}